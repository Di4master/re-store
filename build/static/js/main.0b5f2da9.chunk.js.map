{"version":3,"sources":["store.js","components/shop-header/index.js","components/shop-header/shop-header.js","utilis/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/home-page.js","components/clear-cart-button/clear-cart-button.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","index.js"],"names":["timeout","ShopHeader","connect","shoppingCart","orderTotal","quantityTotal","className","to","compose","funcs","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","booksLoaded","newBooks","type","payload","booksError","error","bookAddedToCart","bookId","fetchBooks","dispatch","getBooks","then","data","catch","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","BookList","books","map","key","id","BookListContainer","this","loading","Component","bookList","bindActionCreators","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","items","cartItems","item","idx","count","total","HomePage","onClearCart","CartPage","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","console","log","setTimeout","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.0b5f2da9.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer from './reducers';\r\n\r\nconst logMiddleware = ({ getState }) => (next) => (action) => {\r\n    console.log(action.type, getState());\r\n    return next(action);\r\n};\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        });\r\n    }\r\n\r\n    return next(action);\r\n};\r\n\r\nconst store = createStore(reducer, applyMiddleware(\r\n    thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\nconst delayedActionCreator = (timeout) => (dispatch) => {\r\n    setTimeout(() => dispatch({\r\n        type: 'DELAYED_ACTION'\r\n    }), timeout);\r\n};\r\n\r\nstore.dispatch(delayedActionCreator(3000));\r\n\r\nexport default store;","import ShopHeader from './shop-header';\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport { Link } from 'react-router-dom'; \r\nimport { connect } from 'react-redux';\r\n\r\nimport './shop-header.css';\r\n\r\nconst ShopHeader = ({ orderTotal, quantityTotal }) => {\r\n    return (\r\n        <header className=\"shop-header row\">\r\n            <Link to='/'>\r\n                <div className=\"logo text-dark\">ReStore</div>\r\n            </Link>\r\n            <Link to='/cart'>\r\n                <div className=\"shopping-cart pt-2\">\r\n                    <i className=\"cart-icon fa fa-shopping-cart\" />\r\n                    {quantityTotal} items (${orderTotal})\r\n                </div>\r\n            </Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { orderTotal, quantityTotal }}) => {\r\n    return {\r\n        orderTotal: orderTotal,\r\n        quantityTotal: quantityTotal\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShopHeader);","const compose = ( ...funcs ) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n};\r\n\r\nexport default compose;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    \r\n    return (\r\n        <div>Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n\r\n    return (\r\n        <div>Error!!!</div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nconst {\r\n    Provider: BookstoreServiceProvider,\r\n    Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n};","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return (<Wrapped { ...props }\r\n                            bookstoreService={bookstoreService} />);\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withBookstoreService;","const booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    };\r\n};\r\n\r\nconst booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    };\r\n};\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    }\r\n};\r\n\r\nexport const bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n};\r\n\r\nexport const bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n};\r\n\r\nexport const allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n};\r\n\r\nexport const clearedCart = (shoppingCart) => {\r\n    return {\r\n        type: 'CLEARED_CART',\r\n        payload: shoppingCart\r\n    }\r\n};\r\n\r\nconst fetchBooksOld = (bookstoreService, dispatch) => () => {                \r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((error) => dispatch(booksError(error)));\r\n};\r\n\r\nconst fetchBooks = (bookstoreService) => () => (dispatch) => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((error) => dispatch(booksError(error)));\r\n};\r\n\r\nexport {\r\n    fetchBooks\r\n};","import BookListItem from \"./book-list-item\";\r\n\r\nexport default BookListItem;","import React from 'react';\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n    const { title, author, price, coverImage } = book;\r\n    return (\r\n        <div className=\"book-list-item\">\r\n            <div className=\"book-cover\">\r\n                <img src={coverImage} alt=\"cover\" />\r\n            </div>\r\n            <div className=\"books-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">${price}</div>\r\n                <button\r\n                    onClick={onAddedToCart}\r\n                    className=\"btn btn-info mt-2\">\r\n                    Add to cart\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookListItem;","import React, { Component } from 'react';\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '../../utilis';\r\n\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\nimport { withBookstoreService } from '../hoc';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport BookListItem from '../book-list-item';\r\nimport './book-list.css';\r\n\r\nconst BookList = ( {books, onAddedToCart } ) => {\r\n    return (\r\n        <ul className=\"book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li key={book.id}>\r\n                            <BookListItem\r\n                                book={book}\r\n                                onAddedToCart={() => onAddedToCart(book.id)} />\r\n                        </li>\r\n                   ) \r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n    }\r\n\r\n    render() {\r\n        const { books, loading, error, onAddedToCart } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return <BookList books={books} onAddedToCart={onAddedToCart} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\r\n    return { books, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n    return bindActionCreators({\r\n        fetchBooks: fetchBooks(bookstoreService),\r\n        onAddedToCart: bookAddedToCart\r\n    }, dispatch);\r\n};\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);","import BookList from \"./book-list\";\r\n\r\nexport default BookList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    bookAddedToCart,\r\n    bookRemovedFromCart,\r\n    allBooksRemovedFromCart } from '../../actions';\r\n\r\nimport './shopping-cart-table.css';\r\n\r\nconst ShoppingCartTable = ( { items, orderTotal, onIncrease, onDecrease, onDelete }) => {\r\n    \r\n    const renderRow = (item, idx) => {\r\n        const { id, title, count, total } = item;\r\n        return (\r\n            <tr key={id} className=\"align-items-center\">\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <button\r\n                            onClick={() => onIncrease(id)}\r\n                            className=\"btn btn-outline-success btn-sm\">\r\n                            <i className=\"fa fa-plus\" />\r\n                        </button>\r\n                        <button\r\n                            onClick={() => onDecrease(id)}\r\n                            className=\"btn btn-outline-success btn-sm\">\r\n                            <i className=\"fa fa-minus\" />\r\n                        </button>\r\n                    </div>\r\n                    <button\r\n                        onClick={() => onDelete(id)}\r\n                        className=\"btn btn-outline-danger btn-sm\">\r\n                        <i className=\"fa fa-trash-o\" />\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Item</th>\r\n                        <th>Count</th>\r\n                        <th>Total</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        items.map(renderRow)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"total\">\r\n                Total order: ${orderTotal}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\r\n    return {\r\n        items: cartItems,\r\n        orderTotal: orderTotal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n        onIncrease: bookAddedToCart,\r\n        onDecrease: bookRemovedFromCart,\r\n        onDelete: allBooksRemovedFromCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import ShoppingCartTable from './shopping-cart-table';\r\n\r\nexport default ShoppingCartTable;","import React from 'react';\r\n\r\nimport BookList from '../book-list';\r\nimport ShoppingCartTable from '../shopping-cart-table';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <BookList />\r\n            <ShoppingCartTable />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearedCart } from '../../actions';\r\n\r\nconst ClearCartButton = ( { onClearCart, shoppingCart } ) => {\r\n    return (\r\n        <button\r\n            onClick={() => onClearCart(shoppingCart)}\r\n            className=\"btn btn-warning\">\r\n            Clear cart\r\n        </button>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart }) => {\r\n    return {\r\n        shoppingCart\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onClearCart: clearedCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClearCartButton);","import React from 'react';\r\n\r\nimport ShoppingCartTable from '../shopping-cart-table';\r\nimport ClearCartButton from '../clear-cart-button/clear-cart-button';\r\n\r\nconst CartPage = () => {\r\n    return (\r\n        <div>\r\n            <ShoppingCartTable />\r\n            <ClearCartButton />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CartPage;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport ShopHeader from '../shop-header';\r\nimport { HomePage, CartPage } from '../pages';\r\nimport './app.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <main role=\"main\" className=\"container\">\r\n            <ShopHeader />\r\n            <Switch>\r\n                <Route\r\n                    path=\"/re-store/build/\"\r\n                    component={HomePage}\r\n                    exact />\r\n\r\n                <Route\r\n                    path=\"/re-store/build/cart\"\r\n                    component={CartPage} />\r\n            </Switch>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default App;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    \r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","export default class BookstoreService {\r\n\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Production-Ready Microservices',\r\n            author: 'Susan J. Fowler',\r\n            price: 32,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\r\n        {\r\n            id: 2,\r\n            title: 'Release It!',\r\n            author: 'Michael T. Nygard',\r\n            price: 45,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'},\r\n    ];\r\n    \r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            // setTimeout(() => {\r\n            //     if (Math.random() > 0.75) {\r\n            //         reject(new Error('Something has gone terribly wrong'))\r\n            //     } else {\r\n            //         resolve(this.data);\r\n            //     }\r\n            // }, 700);\r\n\r\n            resolve(this.data);\r\n        });\r\n    }\r\n}","const updateBookList = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state.bookList;\r\n    }\r\n};\r\n\r\nexport default updateBookList;","const updateCartItems = (cartItems, item, idx) => {\r\n\r\n    if (item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    if (idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ];\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0, idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1)\r\n    ];\r\n};\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n    const {\r\n        id = book.id,\r\n        count = 0,\r\n        title = book.title,\r\n        total = 0 } = item;\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + quantity,\r\n        total: total + quantity * book.price\r\n    };\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const { bookList: { books }, shoppingCart: { cartItems, orderTotal, quantityTotal } } = state;\r\n    const book = books.find(({id}) => id === bookId);\r\n    const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n    const item = cartItems[itemIndex];\r\n\r\n    const newItem = updateCartItem(book, item, quantity);\r\n    const newOrderTotal = orderTotal + quantity * book.price;\r\n    const newQuantityTotal = quantityTotal + quantity;\r\n    return {\r\n        orderTotal: newOrderTotal,\r\n        quantityTotal: newQuantityTotal,\r\n        cartItems: updateCartItems(cartItems, newItem, itemIndex)\r\n    };\r\n};\r\n\r\nconst clearCart = (shoppingCart) => {\r\n    const { orderTotal } = shoppingCart;\r\n    if (orderTotal > 0) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0,\r\n            quantityTotal: 0\r\n        }\r\n    } else {\r\n        return shoppingCart;\r\n    }\r\n};\r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n    \r\n    if (state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0,\r\n            quantityTotal: 0\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n\r\n        case 'BOOK_REMOVED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n        \r\n        case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n            const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\r\n            return updateOrder(state, action.payload, -item.count);\r\n\r\n        case 'CLEARED_CART':\r\n            return clearCart(action.payload);\r\n\r\n        default:\r\n                return state.shoppingCart;\r\n    \r\n    }\r\n};\r\n\r\nexport default updateShoppingCart;","import updateBookList from './book-list';\r\nimport updateShoppingCart from './shopping-cart'\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action)\r\n    };\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <BookstoreServiceProvider value={bookstoreService}>\n                <Router >\n                    <App />\n                </Router>\n            </BookstoreServiceProvider>\n        </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}